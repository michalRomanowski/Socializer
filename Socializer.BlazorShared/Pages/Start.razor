@page "/"

@using Common.Client
@using Common.Utils
@using Socializer.Client

@inject IClient client
@inject ISecureStorage secureStorage
@inject ISocializerClient socializerClient
@inject LayoutState layoutState
@inject NavigationManager navigation
@inject StateContainer stateContainer

Welcome to Socializer!

@code {
	protected override async Task OnInitializedAsync()
	{
		layoutState.Header = "Socializer Start";

		// Used to simulate ap not used for long
		secureStorage.RemoveAll();

		var loginAttempt = await client.LoginAsync();

		if (loginAttempt.IsSuccess == false)
		{
			navigation.NavigateTo("/login");
			return;
		}

		var getUserMeResult = await socializerClient.GetUserMeAsync();

		if (getUserMeResult.IsSuccess == false)
		{
			// Clean all login info. We don't want to continue in such case. A bit harsh as we force user to restart but for now OK.
			// Better like that for error feedback.
			secureStorage.RemoveAll(); 

			layoutState.ErrorMessage = getUserMeResult.ErrorMessage;

			return;
		}

		stateContainer.User = getUserMeResult.Result;
		navigation.NavigateTo("/main");
	}
}
