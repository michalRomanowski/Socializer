@page "/preferences"

@using Socializer.Client
@using Socializer.Shared
@using Socializer.Shared.Dtos
@using Socializer.Shared.Extensions

@inject ISocializerClient socializerClient
@inject LayoutState layoutState
@inject StateContainer stateContainer

<ul style="list-style-type:none; padding:0;">
    @foreach (var preference in userPreferences)
    {
        <li style="margin-bottom: 10px;">
            preference: @preference.DBPediaResource count: @preference.Count weight: @preference.Weight
            <button class="button-light" @onclick="() => DeletePreferenceAsync(preference.Id)">Remove</button>
        </li>
    }
</ul>

@code 
{
    private IEnumerable<UserPreferenceDto> userPreferences = [];

    protected override async Task OnInitializedAsync()
    {
        layoutState.Header = $"Preferences";

        var userPreferencesResult = await socializerClient.GetMyUserPreferencesAsync();

        if (userPreferencesResult.IsSuccess)
        if (userPreferencesResult.IsSuccess)
            userPreferences = userPreferencesResult.Result;
    }

    private async Task DeletePreferenceAsync(Guid preferenceId)
    {
        try
        {
            await socializerClient.DeleteMyUserPreferenceAsync(preferenceId);
            userPreferences = userPreferences.Where(p => p.Id != preferenceId).ToList();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            layoutState.ErrorMessage = ex.Message;
        }
    }
}